trigger:
  - master

pool:
  vmImage: "ubuntu-latest"


variables:
  isCsharpRepository: $[contains(variables['Build.DefinitionName'], 'repo')]

jobs:

# Tags release using semantic versioning
- job: Tag_Release
  displayName: Tag release
  steps:

  # TODO: add docs stuff like Igor did with gitlab CI/CD
  - script:  >
      npx semantic-release
      -p @semantic-release/git
      -p semantic-release-ado
      semantic-release
    displayName: 'Tag release (semantic)'
    env: { GH_TOKEN : $(GitHubToken) }

  - script: echo $(nextRelease)
  - script: echo $nextRelease
  - powershell: echo $env:nextRelease

    # Output version number to be available to other jobs
  - powershell: |
      echo "##vso[task.setvariable variable=versionNumber;isOutput=true]$(nextRelease)"
    name: versionOutput
    displayName: Release version output

# Builds nuget package from repository cs files and publishes to feed
- job: Build_Nuget
  displayName: Build NuGet
  dependsOn: Tag_Release
  # Run only if previous job succeeded and is csharp repo 
  condition: and(succeeded(), eq(variables.isCsharpRepository, true))
  variables:
    # nugetFeed: "P3/ProtoFeed" # Put project / feed here
    nugetVersion: $[ dependencies.Tag_Release.outputs['versionOutput.versionNumber'] ]
  steps:

  # Install .net SDK
  - task: UseDotNet@2
    inputs:
        packageType: "sdk"
        version: "3.x"

  # Create library and pack nuget - version is pulled out of semantic-release task
  - task: PowerShell@2
    inputs:
        filePath: build-nuget.ps1
        arguments: >
            -version $(nugetVersion)

  # Perhaps dotnet pack task instead of doing it in script

  # Auth for nuget push
  - task: NuGetAuthenticate@0
    displayName: "NuGet Authenticate"

  # Publish to feed
  - task: NuGetCommand@2
    displayName: "NuGet push"
    inputs:
        command: push
        packagesToPush: $(System.DefaultWorkingDirectory)/**/*.nupkg;!$(System.DefaultWorkingDirectory)/**/*.symbols.nupkg
        publishVstsFeed: $(nugetFeed)
        allowPackageConflicts: true
